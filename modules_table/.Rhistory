rm(list= ls())
rm(list= ls())
library(readr)
library(dplyr)
library(tidyr)
count_table <- read_csv("/home/ajf/Desktop/CNB/marine_particles_source_data/count_table.ESV.4R.csv")
View(count_table)
count_table <- read.table(file = "/home/ajf/Desktop/CNB/marine_particles_source_data/count_table.ESV.4R.csv" , sep = ";")
View(count_table)
count_table <- read.table(file = "/home/ajf/Desktop/CNB/marine_particles_source_data/count_table.ESV.4R.csv" , sep = ",")
View(count_table)
#Transform to relabundance
# Convertir las abundancias absolutas a relativas
abundance_relative <- count_table
View(abundance_relative)
abundance_relative[,-1] <- sweep(abundance_table, 2, colSums(abundance_table), FUN = "/")
abundance_relative[,-1] <- sweep(count_table, 2, colSums(abundance_table), FUN = "/")
abundance_relative[,-1] <- sweep(count_table, 2, colSums(count), FUN = "/")
abundance_relative[,-1] <- sweep(count_table, 2, colSums(count_table), FUN = "/")
abundance_relative <- sweep(count_table, 2, colSums(count_table), FUN = "/")
View(abundance_relative)
colsums(abundance_relative)
colsum(abundance_relative)
colsum(abundance_relative)
colSums(abundance_relative)
read_tsv("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/aligned_ssu.tsv")
otus_to_filter <- read_tsv("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/aligned_ssu.tsv")
View(otus_to_filter)
otus_to_filter <- read.table("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/aligned_ssu.tsv",sep = "/t")
otus_to_filter <- read.table("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/aligned_ssu.tsv",sep = "\t")
View(otus_to_filter)
otus_to_filter <- otus_to_filter$V1
otus_to_filter
abundance_relative$OTU <- rownames(abundance_relative)
View(abundance_relative)
abundance_relative_filtered <- filter(abundance_relative, OTU %in% otus_to_filter)
colSums(abundance_relative_filtered)
length(colnames(abundance_relative_filtered))
colSums(abundance_relative_filtered[,-348])
mean(colSums(abundance_relative_filtered[,-348]))
modules_algilante <- read_tsv("/home/ajf/Desktop/CNB/ecocoherence_sparcc/Alginate/functionink_tmp/Partition-NL_Average_StopStep-1046_interactions_filtered_p0.01_threshold_Alginate_.tsv_guildGT4.txt")
View(modules_algilante)
modules_algilante <- read.table("/home/ajf/Desktop/CNB/ecocoherence_sparcc/Alginate/functionink_tmp/Partition-NL_Average_StopStep-1046_interactions_filtered_p0.01_threshold_Alginate_.tsv_guildGT4.txt",sep= " ")
p
modules_algilante <- read.table("/home/ajf/Desktop/CNB/ecocoherence_sparcc/Alginate/functionink_tmp/Partition-NL_Average_StopStep-1046_interactions_filtered_p0.01_threshold_Alginate_.tsv_guildGT4.txt",sep= " ")
modules_algilante <- read.table("/home/ajf/Desktop/CNB/ecocoherence_sparcc/Alginate/functionink_tmp/Partition-NL_Average_StopStep-1046_interactions_filtered_p0.01_threshold_Alginate_.tsv_guildGT4.txt",sep= " ")
View(modules_algilante)
modules_algilante <- read.table("/home/ajf/Desktop/CNB/ecocoherence_sparcc/Alginate/functionink_tmp/Partition-NL_Average_StopStep-1046_interactions_filtered_p0.01_threshold_Alginate_.tsv_guildGT4.txt",sep= "")
modules_algilante <- read.table("/home/ajf/Desktop/CNB/ecocoherence_sparcc/Alginate/functionink_tmp/Partition-NL_Average_StopStep-1046_interactions_filtered_p0.01_threshold_Alginate_.tsv_guildGT4.txt",sep= " ")
modules_algilante <- read.table("/home/ajf/Desktop/CNB/ecocoherence_sparcc/Alginate/functionink_tmp/Partition-NL_Average_StopStep-1046_interactions_filtered_p0.01_threshold_Alginate_.tsv_guildGT4.txt",sep= " ")
View(modules_algilante)
?separate
modules_algilante <- separate(modules_algilante,col = V1,into = c("ESV","guild"), sep = " ")
View(modules_algilante)
modules_algilante <- separate(modules_algilante,col = V1,into = c("ESV","guild"), sep = "")
View(modules_algilante)
modules_algilante_separated <- separate(modules_algilante,col = V1,into = c("ESV","guild"), sep = "")
modules_algilante <- read.table("/home/ajf/Desktop/CNB/ecocoherence_sparcc/Alginate/functionink_tmp/Partition-NL_Average_StopStep-1046_interactions_filtered_p0.01_threshold_Alginate_.tsv_guildGT4.txt",sep= " ")
modules_algilante_separated <- separate(modules_algilante,col = V1,into = c("ESV","guild"), sep = "")
View(modules_algilante_separated)
modules_algilante_separated <- separate(modules_algilante,col = V1,into = c("ESV","guild"), sep = "\t")
View(modules_algilante_separated)
modules_algilante <- read.table("/home/ajf/Desktop/CNB/ecocoherence_sparcc/Alginate/functionink_tmp/Partition-NL_Average_StopStep-1046_interactions_filtered_p0.01_threshold_Alginate_.tsv_guildGT4.txt",sep= " ",skip = 1)
modules_algilante_separated <- separate(modules_algilante,col = V1,into = c("ESV","guild"), sep = "\t")
View(modules_algilante_separated)
View(modules_algilante)
View(modules_algilante_separated)
modules_algilante_separated_filtered <- filter(modules_algilante_separated, ESV %in% otus_to_filter)
length(modules_algilante_separated_filtered$ESV)/length(modules_algilante_separated$ESV)
View(modules_algilante_separated_filtered)
mean(colSums(abundance_relative_filtered[,-348])) ###% explained of abundance explained in different samples
length(colnames(abundance_relative_filtered))
(colSums(abundance_relative_filtered[,-348])
colSums(abundance_relative_filtered[,-348])
colSums(abundance_relative_filtered[,-348]
colSums(abundance_relative_filtered[,-348])
colSums(abundance_relative_filtered[,-348])
abundance_relative_filtered_b <- abundance_relative_filtered[,!grepl("seawater",names(abundance_relative_filtered))]
length(abundance_relative_filtered_b)
colSums(abundance_relative_filtered_b[,-348])
mean(colSums(abundance_relative_filtered_b[,-348]))
mean(colSums(abundance_relative_filtered_b[,-348]))
mean(colSums(abundance_relative_filtered[,-348])) ###% explained of abundance explained in different samples
length(abundance_relative_filtered_b)
length(abundance_relative_filtered_b)
length(abundance_relative_filtered_b)
View(abundance_relative_filtered_b)
abundance_relative_filtered_b <- abundance_relative_filtered[,!grepl("Seawater",names(abundance_relative_filtered))]
length(abundance_relative_filtered_b)
mean(colSums(abundance_relative_filtered_b[,-288]))
abundance_relative_filtered_b_c <- abundance_relative_filtered_b[,!grepl("Chitosan",names(abundance_relative_filtered))]
abundance_relative_filtered_b_c <- abundance_relative_filtered_b[,!grepl("Chitosan",names(abundance_relative_filtered))]
abundance_relative_filtered_b_c <- abundance_relative_filtered_b[,!grepl("Chitosan",names(abundance_relative_filtered))]
abundance_relative_filtered_b_c <- abundance_relative_filtered_b[,!grepl("Chitosan",names(abundance_relative_filtered))]
abundance_relative_filtered_b_c <- abundance_relative_filtered_b[,!grepl("Chitosan",names(abundance_relative_filtered))]
abundance_relative_filtered_b_c <- abundance_relative_filtered_b[,!grepl("Chitosan",names(abundance_relative_filtered_b))]
length(abundance_relative_filtered_b_c)
mean(colSums(abundance_relative_filtered_b[,-216]))
length(abundance_relative_filtered_b_c)
mean(colSums(abundance_relative_filtered_b[,-216]))
mean(colSums(abundance_relative_filtered_b[,-217]))
mean(colSums(abundance_relative_filtered_b_c[,-216]))
?sweep
rownames %in% modules_algilante_separated$ESV
rownames(count_table) %in% modules_algilante_separated$ESV
abundance_relative_module <- count_table[rownames(count_table) %in% modules_algilante_separated$ESV,]
View(abundance_relative_module)
abundance_relative_module <- sweep(abundance_relative_module,2,colSums(abundance_relative_module),"/")
View(abundance_relative_module)
colSums(abundance_relative_module)
abundace_relative_module_filtered<- filter(abundance_relative_module, rownames(abundance_relative_module) %in% otus_to_filter)
colSums(abundace_relative_module_filtered)
mean(colSums(abundace_relative_module_filtered))
abundace_relative_module_filtered_b <- abundace_relative_module_filtered[,!grepl("Seawater",colnames(abundace_relative_module_filtered))]
mean(colSums(abundace_relative_module_filtered))
mean(colSums(abundace_relative_module_filtered))
mean(colSums(abundace_relative_module_filtered_b))
mean(colSums(abundace_relative_module_filtered_b))
abundace_relative_module_filtered_b_c <- abundace_relative_module_filtered_b[,!grepl("Seawater",colnames(abundace_relative_module_filtered_b))]
mean(colSums(abundace_relative_module_filtered_b_c))
mean(colSums(abundace_relative_module_filtered_b_c))
rm(list = ls())
esv_module_2 <- read.table("esv_module_2_agarose.tsv", sep = "\t")
esv_module_2 <- read.table("/home/ajf/Desktop/CNB/ecocoherence_metabolismesv_module_2_agarose.tsv", sep = "\t")
esv_module_2 <- read.table("/home/ajf/Desktop/CNB/ecocoherence_metabolism/esv_module_2_agarose.tsv", sep = "\t")
View(esv_module_2)
esv_module_2 <- read.table("/home/ajf/Desktop/CNB/ecocoherence_metabolism/esv_module_2_agarose.tsv", sep = "\t",header = T)
View(esv_module_2)
esv_module_2 <- read.table("/home/ajf/Desktop/CNB/ecocoherence_metabolism/esv_module_2_agarose.tsv", sep = "\t",header = F)
matched_ESV <-  read.table("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/aligned_ssu.tsv", sep = "\t", header = F)
View(matched_ESV)
matched_ESV <-  read.table("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/aligned_ssu.tsv", sep = "\t", header = T)
View(matched_ESV)
matched_ESV <-  read.table("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/aligned_ssu.tsv", sep = "\t", header = F)
View(matched_ESV)
colnames(esv_module_2) < c("ESV","module")
colnames(esv_module_2) <- c("ESV","module")
View(esv_module_2)
kegg_anotated_entries <- read.table("/home/ajf/Desktop/globdb_database/kegg_db.tsv",sep = "\t", header = F)
View(kegg_anotated_entries)
colnames(kegg_anotated_entries) <- "ID"
View(matched_ESV)
kegg_anotated_entries$ID <- gsub("_kegg.gff.gz","",kegg_anotated_entries$ID)
View(kegg_anotated_entries)
View(kegg_anotated_entries)
kegg_anotated_entries$ID <- gsub("_kegg.gff.gz","",kegg_anotated_entries$ID)
View(kegg_anotated_entries)
View(kegg_anotated_entries)
View(matched_ESV)
matched_ESV$V2 <- gsub(".*(GCF_\\d+).*", "\\1", matched_ESV$V2)
View(esv_module_2)
View(matched_ESV)
matched_ESV <- filter(matched_ESV, V1 %in% esv_module_2$ESV)
View(matched_ESV)
matched_ESV <- filter(matched_ESV, matched_ESV$V1 %in% esv_module_2$ESV)
matched_ESV <- filter(matched_ESV, V1 %in% esv_module_2$ESV)
matched_ESV <- filter(matched_ESV, V1 %in% esv_module_2$ESV)
matched_ESV <- filter(matched_ESV, V1 %in% esv_module_2$ESV)
View(esv_module_2)
matched_ESV <-  read.table("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/aligned_ssu.tsv", sep = "\t", header = F)
View(matched_ESV)
matched_ESV <- filter(matched_ESV, V1 %in% esv_module_2$ESV)
matched_ESV <- filter(matched_ESV, V1 %in% esv_module_2$ESV)
matched_ESV <- filter(matched_ESV, V1 %in% esv_module_2$ESV)
matched_ESV <- filter(matched_ESV, V1 %in% esv_module_2$ESV)
matched_ESV <- matched_ESV %>% select("V1","V2")
library(magrittr)
matched_ESV <- filter(matched_ESV, V1 %in% esv_module_2$ESV)
matched_ESV <- matched_ESV %>% select("V1","V2")
library(readr)
library(tidyr)
library(dplyr)
library(magrittr)
matched_ESV <- matched_ESV %>% select("V1","V2")
View(matched_ESV)
colnames(matched_ESV) <- c("ESV","ID")
colnames(matched_ESV) <- c("ESV","ID_entry")
View(kegg_anotated_entries)
View(matched_ESV)
matched_ESV <- filter(matched_ESV, ESV %in% esv_module_2$ESV)
View(esv_module_2)
View(matched_ESV)
View(matched_ESV)
View(kegg_anotated_entries)
matched_ESV <- filter(matched_ESV, ESV %in% esv_module_2$ESV) %>%
filter(ID_entry %in% kegg_anotated_entries$ID)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
matched_ESV <- matched_ESV %>% select("V1","V2")
matched_ESV <- matched_ESV %>% select("V1","V2")
rm(list = ls())
library(readr)
library(tidyr)
library(dplyr)
library(magrittr)
###Load the 3 tables
esv_module_2 <- read.table("/home/ajf/Desktop/CNB/ecocoherence_metabolism/esv_module_2_agarose.tsv", sep = "\t",header = F)
colnames(esv_module_2) <- c("ESV","module")
matched_ESV <-  read.table("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/aligned_ssu.tsv", sep = "\t", header = F)
matched_ESV <- matched_ESV %>% select("V1","V2")
colnames(matched_ESV) <- c("ESV","ID_entry")
kegg_anotated_entries <- read.table("/home/ajf/Desktop/globdb_database/kegg_db.tsv",sep = "\t", header = F)
colnames(kegg_anotated_entries) <- "ID"
kegg_anotated_entries$ID <- gsub("_kegg.gff.gz","",kegg_anotated_entries$ID)
matched_ESV$V2 <- gsub(".*(GCF_\\d+).*", "\\1", matched_ESV$V2)
matched_ESV$V2 <- gsub(".*(GCF_\\d+).*", "\\1", matched_ESV$ID_entry)
matched_ESV <- filter(matched_ESV, ESV %in% esv_module_2$ESV) %>%
filter(ID_entry %in% kegg_anotated_entries$ID)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
View(matched_ESV)
source("~/.active-rstudio-document")
View(matched_ESV)
matched_ESV <- filter(matched_ESV, ESV %in% esv_module_2$ESV) %>%
filter(ID_entry %in% kegg_anotated_entries$ID)
View(matched_ESV)
length(unique(matched_ESV$ESV))
length(unique(matched_ESV$ESV)) == length(unique(esv_module_2$ESV))
length(unique(matched_ESV$ESV)) == length(unique(esv_module_2$ESV))
length(unique(esv_module_2$ESV))
View(matched_ESV)
source("~/.active-rstudio-document")
total_esv_matched <- matched_ESV$ESV
matched_ESV <-  filter(matched_ESV,ID_entry %in% kegg_anotated_entries$ID)
kegg_esv_matched <- matched_ESV$ESV
length(unique(total_esv_matched)) == length(unique(kegg_esv_matched))
length(unique(kegg_esv_matched))
length(unique(total_esv_matched))
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
rm(list = ls())
source("~/.active-rstudio-document")
length(unique(total_esv_matched))
length(unique(kegg_esv_matched))
source("~/Desktop/globdb_database/check_otus_in_db.R")
source("~/Desktop/CNB/ecocoherence_metabolism/calculation_overlap.R")
warnings()
View(pair_wise_combination_ESV)
View(metadata_genomes_df)
for (n in 1:nrow(pair_wise_combination_ESV)) {
print(n)
OTU_1<-pair_wise_combination_ESV$ESV_1[n]
OTU_2<-pair_wise_combination_ESV$ESV_2[n]
family1 <-metadata_genomes_df$family[metadata_genomes_df$ESV_list == OTU_1]
family2 <-metadata_genomes_df$family[metadata_genomes_df$ESV_list == OTU_2]
KO_OTU_1 <- metadata_genomes_df$KO_list[metadata_genomes_df$ESV_list == OTU_1]
KO_OTU_2 <- metadata_genomes_df$KO_list[metadata_genomes_df$ESV_list == OTU_2]
KO_OTU_1 <- unlist(strsplit(KO_OTU_1,split = ";"))
KO_OTU_2 <- unlist(strsplit(KO_OTU_2,split = ";"))
pair_wise_combination_ESV$overlap[n] <- similarity_jaccard(KO_OTU_1,KO_OTU_2)
pair_wise_combination_ESV$family[n] <-ifelse(family1 == family2,family1,"different_family")
###Habria que añadir la informacion de las familias
}
View(pair_wise_combination_ESV)
pair_wise_combination_ESV_gruoped_by_family <- pair_wise_combination_ESV %>%
group_by(family) %>%
summarise("mean_overlap" = mean(overlap))
View(pair_wise_combination_ESV_gruoped_by_family)
pair_wise_combination_ESV_gruoped_by_family <- pair_wise_combination_ESV %>%
filter(overlap =! 1) %>%
group_by(family) %>%
summarise("mean_overlap" = mean(overlap))
pair_wise_combination_ESV_gruoped_by_family <- pair_wise_combination_ESV %>%
filter(overlap == !1) %>%
group_by(family) %>%
summarise("mean_overlap" = mean(overlap))
pair_wise_combination_ESV_gruoped_by_family <- pair_wise_combination_ESV %>%
filter(overlap == !1) %>%
group_by(family) %>%
summarise("mean_overlap" = mean(overlap))
View(pair_wise_combination_ESV_gruoped_by_family)
View(pair_wise_combination_ESV)
pair_wise_combination_ESV_gruoped_by_family <- pair_wise_combination_ESV %>%
filter(overlap != 1) %>%
group_by(family) %>%
summarise("mean_overlap" = mean(overlap))
View(pair_wise_combination_ESV_gruoped_by_family)
pair_wise_combination_ESV_gruoped_by_family <- pair_wise_combination_ESV %>%
filter(overlap != 1) %>%
group_by(family) %>%
summarise("mean_overlap" = median(overlap))
summarise("mean_overlap" = median(overlap))
pair_wise_combination_ESV_gruoped_by_family <- pair_wise_combination_ESV %>%
filter(overlap != 1) %>%
group_by(family)
ggplot(pair_wise_combination_ESV_gruoped_by_family,aes(family,overlap)) +
geom_boxplot()
ggplot(pair_wise_combination_ESV_gruoped_by_family,aes(family,overlap)) +
geom_point()
source("~/Desktop/CNB/ecocoherence_metabolism/calculation_overlap.R")
ggplot(pair_wise_combination_ESV_gruoped_by_family,aes(family,overlap)) +
geom_point()
paste("carve ",id," -o model_",id,".xml --solver SCIP",sep="")
ESV_ID_table <- read_tsv("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/matched_ESV_id_0.97.tsv",col_names = F)
library(readr)
library(dplyr)
library(tidyr)
library(readr)
library(dplyr)
library(tidyr)
ESV_ID_table <- read_tsv("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/matched_ESV_id_0.97.tsv",col_names = F)
print(ESV_ID_table)
View(kegg_test)
rm(list= ls())
metadata_genomes <- read_tsv("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/matched_ESV_id_0.97.tsv",col_names = F)
library(readr)
library(tidyr)
library(dplyr)
metadata_genomes <- read_tsv("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/matched_ESV_id_0.97.tsv",col_names = F)
metadata_genomes <- select(metadata_genomes,c("X9","X10"))
colnames(metadata_genomes) <- c("ASV","ID")
metadata_genomes <- filter(metadata_genomes, ID != "*")
source("~/.active-rstudio-document")
unique_ids <- unique(aligned_genomes$ID)
aligned_genomes_unique <- data.frame("ID" = unique_ids)
aligned_genomes_unique$Family <- NA
aligned_genomes_unique$Family <- aligned_genomes$family[match(aligned_genomes_unique$ID,aligned_genomes$ID)]
aligned_genomes_unique$ID <- gsub("^.*?(GCF_|GCA_)", "\\1", aligned_genomes_unique$ID)
aligned_genomes_unique$ID <- gsub("\\..*$", "", aligned_genomes_unique$ID)
aligned_genomes_unique$ID <- gsub("_$", "", aligned_genomes_unique$ID)
View(aligned_genomes_unique)
read_tsv("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/bac120_metadata_r220.tsv")
read_tsv("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/bac120_metadata_r220.tsv")
metadata_table <- read_tsv("/home/ajf/Desktop/CNB/ecocoherence_metabolism/genome_aligment/bac120_metadata_r220.tsv")
View(metadata_table)
aligned_genomes_unique <- data.frame("ID" = unique_ids)
metadata_table_f <- filter(metadata_table,accession %in% aligned_genomes_unique$ID)
colnames(metadata_table)
metadata_table_f <- filter(metadata_table,accession %in% aligned_genomes_unique$ID) %>%
select(c("accession","gc_percentage","genome_size","coding_density"))
View(metadata_table_f)
metadata_table_f <- filter(metadata_table,accession %in% aligned_genomes_unique$ID) %>%
select(c("accession","checkm2_completeness","checkm2_contamination","gc_percentage","genome_size","coding_density"))
View(metadata_table_f)
metadata_table_f <- filter(metadata_table,accession %in% aligned_genomes_unique$ID) %>%
select(c("accession","checkm2_completeness","checkm2_contamination","gc_percentage","genome_size","coding_density","ncbi_protein_count"))
View(metadata_table_f)
metadata_table_f <- filter(metadata_table,accession %in% aligned_genomes_unique$ID) %>%
select(c("accession","checkm2_completeness","checkm2_contamination","gc_percentage","genome_size","coding_density","ncbi_protein_count","protein_count"))
View(metadata_table_f)
metadata_table_f <- filter(metadata_table,accession %in% aligned_genomes_unique$ID) %>%
select(c("accession","checkm2_completeness","checkm2_contamination","gc_percentage","genome_size","coding_density","protein_count"))
View(metadata_table_f)
install.packages("keras")
keras::install_keras()
library(keras)
tensorflow::tf_config()
tensorflow::tf_config()
tensorflow::tf_config()
tensorflow::tf_config()
tensorflow::tf_config()
tensorflow::tf_config()
source("~/Desktop/CNB/ecocoherence/functionink/functionink_internal_threshold.R")
source("~/Desktop/CNB/ecocoherence/heatmap_barplot/phyloseq_2functionInk_modified(abundanceplotandheatmapworks).R")
source("~/Desktop/CNB/ecocoherence/modules_table/tables_modules.R")
